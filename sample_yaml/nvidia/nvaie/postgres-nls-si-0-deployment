iapiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-nls-si-0
  name: postgres-nls-si-0
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-nls-si-0
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/back-tier: "true"
        io.kompose.service: postgres-nls-si-0
    spec:
            #      imagePullSecrets:
            #- name: registry-secret
      containers:
        - args:
            - postgres
            - -c
            - max_connections=1000
          image: docker.io/niteshmehra/nvaie:pgsql
          imagePullPolicy: IfNotPresent
          name: postgres-nls-si-0
          ports:
            - containerPort: 5432
          resources:
            limits:
              cpu: "4"
              memory: "2147483648"
            requests:
              cpu: "4"
              memory: "2147483648"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
              subPath : data
            - mountPath: /etc/dls/config
              name: configurations
      restartPolicy: Always
      securityContext:
        allowPrivilegeEscalation: true
        runAsUser: 0
        capabilities:
          add:
          - all
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: configurations
          persistentVolumeClaim:
            claimName: configurations
status: {}

[INFO] root log_setup(): setting log file as: inventory.log
[INFO] root set_haproxy(): currently only haproxy is supported for load balancing
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_software_download_dir(): Creating directory /home/ansible/files
[INFO] root create_dir(): successfully created directory /home/ansible/files
[INFO] root get_software(): downloading OCP /home/ansible/files software bits into 4.6
[INFO] root get_software(): downloading openshift-install-linux.tar.gz
[INFO] root get_software(): downloading rhcos-live-initramfs.x86_64.img
[INFO] root get_software(): downloading rhcos-live-kernel-x86_64
[INFO] root get_software(): downloading rhcos-metal.x86_64.raw.gz
[INFO] root get_software(): downloading rhcos-live-rootfs.x86_64.img
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_cluster_nodes(): supported cluster install options: 
        1. 3 node (converged control/compute nodes)
        2. 5+ node (3 control and 2+ compute)
        
[INFO] root get_cluster_nodes(): option selected: 1
[ERROR] root get_user_response(): idrac ip 172.168.0.51 not pingeable
[INFO] root get_nodes_info(): select network interfaces for node 650m3
[ERROR] root get_user_response(): idrac ip 172.168.0.52 not pingeable
[INFO] root get_nodes_info(): select network interfaces for node 650m2
[ERROR] root get_user_response(): idrac ip 172.168.0.54 not pingeable
[INFO] root get_nodes_info(): select network interfaces for node 650m1
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_disk_name(): ensure disknames are available. Otherwise OpenShift install fails
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_dns_details(): adding zone_file: /var/named/intel-ocp.zones cluster: intel-ocp
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_http_details(): adding http_port: 8080 http_ignition: ignition version: 4.6
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_ignition_details(): pod network cidr: 10.128.0.0/14
[INFO] root get_ignition_details(): adding install_dir: openshift cluster_network_cidr: 10.128.0.0/14                      host_prefix: 23 service_network_cidr: 172.30.0.0/16
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root display_inventory(): all:
  children:
    primary:
      hosts: intel15-csah.dcws.lab
  vars:
    bootstrap_node:
    - ip: 192.168.32.65
      mac: '52:54:00:43:31:12'
      name: bootstrap
    cluster: intel-ocp
    cluster_install: 3 node
    cluster_network_cidr: 10.128.0.0/14
    control_nodes: []
    default_lease_time: 8000
    default_zone_file: /var/named/intel-ocp.zones
    dns_forwarder: 10.8.8.8
    haproxy_conf: /etc/haproxy/haproxy.cfg
    host_prefix: 23
    http_ignition: ignition
    http_port: 8080
    initramfs: rhcos-live-initramfs.x86_64.img
    install_dir: openshift
    install_user: core
    kernel_file: rhcos-live-kernel-x86_64
    master_install_device: sda
    master_ports:
    - description: apiserver
      port: 6443
    - description: configserver
      port: 22623
    max_lease_time: 72000
    num_of_control_nodes: 3
    openshift_installer: openshift-install-linux.tar.gz
    os: rhcos
    proxy: haproxy
    rootfs: rhcos-live-rootfs.x86_64.img
    service_network_cidr: 172.30.0.0/16
    software_src: /home/ansible/files
    uefi_file: rhcos-metal.x86_64.raw.gz
    version: '4.6'
    worker_ports:
    - description: http
      port: 80
    - description: https
      port: 443

[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root log_setup(): setting log file as: inventory.log
[INFO] root set_haproxy(): currently only haproxy is supported for load balancing
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root log_setup(): setting log file as: inventory.log
[INFO] root log_setup(): setting log file as: inventory.log
[INFO] root set_haproxy(): currently only haproxy is supported for load balancing
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_software_download_dir(): Creating directory /home/ansible/files
[INFO] root create_dir(): successfully created directory /home/ansible/files
[INFO] root get_software(): downloading OCP /home/ansible/files software bits into 4.10
[INFO] root get_software(): downloading openshift-install-linux.tar.gz
[INFO] root get_software(): downloading rhcos-live-initramfs.x86_64.img
[INFO] root get_software(): downloading rhcos-live-kernel-x86_64
[INFO] root get_software(): downloading rhcos-metal.x86_64.raw.gz
[INFO] root get_software(): downloading rhcos-live-rootfs.x86_64.img
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_software_download_dir(): directory /home/ansible/files already exists
[INFO] root get_software(): downloading OCP /home/ansible/files software bits into 4.10
[INFO] root get_software(): file openshift-install-linux.tar.gz already exists in /home/ansible/files
[INFO] root validate_file(): validating file openshift-install-linux.tar.gz in /home/ansible/files
[INFO] root validate_file(): sha256 for file openshift-install-linux.tar.gz is fe1afd63e7f7d4a008c9b336d4689646eb8e1a104839146092195ab71c4782ff
[INFO] root validate_file(): sha256sum for file openshift-install-linux.tar.gz is validated in client.txt
[INFO] root get_software(): file rhcos-live-initramfs.x86_64.img already exists in /home/ansible/files
[INFO] root validate_file(): validating file rhcos-live-initramfs.x86_64.img in /home/ansible/files
[INFO] root validate_file(): sha256 for file rhcos-live-initramfs.x86_64.img is 9d6a562839d2760fc35a6645a9a0e337ed561a5ae2d1242d37fea95bf21b2ac5
[INFO] root validate_file(): sha256sum for file rhcos-live-initramfs.x86_64.img is validated in rhcos.txt
[INFO] root get_software(): file rhcos-live-kernel-x86_64 already exists in /home/ansible/files
[INFO] root validate_file(): validating file rhcos-live-kernel-x86_64 in /home/ansible/files
[INFO] root validate_file(): sha256 for file rhcos-live-kernel-x86_64 is 0c4d5c1c4b5c230de4b98d921569996ea765eb2b16d3531a4bd98d796833c0e3
[INFO] root validate_file(): sha256sum for file rhcos-live-kernel-x86_64 is validated in rhcos.txt
[INFO] root get_software(): file rhcos-metal.x86_64.raw.gz already exists in /home/ansible/files
[INFO] root validate_file(): validating file rhcos-metal.x86_64.raw.gz in /home/ansible/files
[INFO] root validate_file(): sha256 for file rhcos-metal.x86_64.raw.gz is abb9f690eeeeb108a625d56b08ea7dc9da3130ddc8d4db97c80e1ac84d91e030
[INFO] root validate_file(): sha256sum for file rhcos-metal.x86_64.raw.gz is validated in rhcos.txt
[INFO] root get_software(): file rhcos-live-rootfs.x86_64.img already exists in /home/ansible/files
[INFO] root validate_file(): validating file rhcos-live-rootfs.x86_64.img in /home/ansible/files
[INFO] root validate_file(): sha256 for file rhcos-live-rootfs.x86_64.img is d32f9e6afb4091046ab9a06602169932c963a514014603e504dd0ea7c86a388a
[INFO] root validate_file(): sha256sum for file rhcos-live-rootfs.x86_64.img is validated in rhcos.txt
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_cluster_nodes(): supported cluster install options: 
        1. 3 node (converged control/compute nodes)
        2. 5+ node (3 control and 2+ compute)
        
[INFO] root get_cluster_nodes(): option selected: 1
[ERROR] root get_user_response(): idrac ip 172.168.0.51 not pingeable
[INFO] root get_nodes_info(): select network interfaces for node 650m3
[ERROR] root get_user_response(): idrac ip 172.168.0.52 not pingeable
[INFO] root get_nodes_info(): select network interfaces for node 650m2
[ERROR] root get_user_response(): idrac ip 172.168.0.54 not pingeable
[INFO] root get_nodes_info(): select network interfaces for node 650m1
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_disk_name(): ensure disknames are available. Otherwise OpenShift install fails
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_dns_details(): adding zone_file: /var/named/intel-ocp.zones cluster: intel-ocp
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_http_details(): adding http_port: 8080 http_ignition: ignition version: 4.10
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root get_ignition_details(): pod network cidr: 10.128.0.0/14
[INFO] root get_ignition_details(): adding install_dir: openshift cluster_network_cidr: 10.128.0.0/14                      host_prefix: 23 service_network_cidr: 172.30.0.0/16
[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

[INFO] root display_inventory(): all:
  children:
    primary:
      hosts: intel15-csah.dcws.lab
  vars:
    bootstrap_node:
    - ip: 192.168.32.61
      mac: 52:54:00:56:75:36
      name: bootstrap
    cluster: intel-ocp
    cluster_install: 3 node
    cluster_network_cidr: 10.128.0.0/14
    control_nodes: []
    default_lease_time: 8000
    default_zone_file: /var/named/intel-ocp.zones
    dns_forwarder: 10.8.8.8
    haproxy_conf: /etc/haproxy/haproxy.cfg
    host_prefix: 23
    http_ignition: ignition
    http_port: 8080
    initramfs: rhcos-live-initramfs.x86_64.img
    install_dir: openshift
    install_user: core
    kernel_file: rhcos-live-kernel-x86_64
    master_install_device: sda
    master_ports:
    - description: apiserver
      port: 6443
    - description: configserver
      port: 22623
    max_lease_time: 72000
    num_of_control_nodes: 3
    openshift_installer: openshift-install-linux.tar.gz
    os: rhcos
    proxy: haproxy
    rootfs: rhcos-live-rootfs.x86_64.img
    service_network_cidr: 172.30.0.0/16
    software_src: /home/ansible/files
    uefi_file: rhcos-metal.x86_64.raw.gz
    version: '4.10'
    worker_ports:
    - description: http
      port: 80
    - description: https
      port: 443

[INFO] root generate_inputs_menu(): 
1: download OpenShift software
2: cluster install
3: disk info
4: dns
5: http
6: ignition config
7: review inventory
8: generate inventory file
9: Exit

